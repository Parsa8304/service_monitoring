version: '3.9'

services:
  khabarfarsi:
    build: ./KhabarFarsi_API
    container_name: khabarfarsi
    working_dir: /app
    volumes:
      - ./KhabarFarsi_API:/app
    # Choose the right command depending on your tech:
    # For FastAPI / Uvicorn:
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    # For Node.js:
    # command: npx nodemon --watch . server.js
    environment:
      - SERVICE_NAME=khabarfarsi
      - ENVIRONMENT=dev
      - WATCHFILES_FORCE_POLLING=1
      - CHOKIDAR_USEPOLLING=1
    ports:
      - "9001:8000"
    networks: [stack]

  producthunt:
    build: ./ProductHunt_API
    container_name: producthunt
    working_dir: /app
    volumes:
      - ./ProductHunt_API:/app
    # command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    # command: npx nodemon --watch . server.js
    environment:
      - SERVICE_NAME=producthunt
      - ENVIRONMENT=dev
      - WATCHFILES_FORCE_POLLING=1
      - CHOKIDAR_USEPOLLING=1
    ports:
      - "9002:8000"
    networks: [stack]

  twitter:
    build: ./Twitter_API
    container_name: twitter
    working_dir: /app
    volumes:
      - ./Twitter_API:/app
    # command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    # command: npx nodemon --watch . server.js
    environment:
      - SERVICE_NAME=twitter    # fixed typo
      - ENVIRONMENT=dev
      - WATCHFILES_FORCE_POLLING=1
      - CHOKIDAR_USEPOLLING=1
    ports:
      - "9003:8000"
    networks: [stack]

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./prometheus/rules.yml:/etc/prometheus/rules.yml:ro
    ports:
      - "9090:9090"
    networks: [stack]

  monitoring:
    build: ./Monitoring
    container_name: monitoring
    working_dir: /app
    volumes:
      - ./Monitoring:/app
    # command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    environment:
      - PROMETHEUS_URL=http://prometheus:9090
      - WATCHFILES_FORCE_POLLING=1
    ports:
      - "9100:8000"
    depends_on:
      - prometheus
    networks: [stack]

networks:
  stack:
    driver: bridge
